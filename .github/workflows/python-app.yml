# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  CodeChecks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Test with pytest
        run: |
          pytest tests

  # DockerCompose:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4
  
  #     - name: Create `Postgres` directory for the `database` microservice
  #       run: mkdir ~/Volumes/db

  #     - name: Create `PgAdmin` directory for the `DB admin` microservice
  #       run: mkdir ~/Volumes/db_admin

  #     - name: Create `data` directory for ingesting the data in the DB
  #       run: mkdir ~/Volumes/data
  
  #     - name: Build Docker images and run Docker containers in background
  #       run: docker-compose up --detach
  
  #     - name: Run unit tests
  #       run: docker exec testing pytest -v /home/shield/testing/testing_script.py


