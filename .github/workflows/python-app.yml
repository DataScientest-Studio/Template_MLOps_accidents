# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# https://www.youtube.com/watch?v=R8_veQiYBjI&ab_channel=TechWorldwithNana

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  RoadAccidentsDatabaseIngestion:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Update pip
        run: |
          python -m pip install --upgrade pip

      - name: Install road_accidents_database_ingestion package 
        run: |
          python -m pip install -e python-packages/road_accidents_database_ingestion
    
      - name: Test road_accidents_database_ingestion package
        run: |
          pytest python-packages/road_accidents_database_ingestion/tests

      - name: Build the docker image of the road_accidents_database_ingestion package
        uses: docker/login-action@v1
        with:
          username: roadaccidentsmlops24
          password: dckr_pat_c7z819p35OfFdnkGt19m0nd4clM

      - name: Publish the docker image of the road_accidents_database_ingestion package to DockerHub
        run: |
          echo "TODO (Part of the CD pipeline)"
  
  ModelApi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Update pip
        run: |
          python -m pip install --upgrade pip
        
      - name: Install model_api package 
        run: |
          python -m pip install -e python-packages/model_api
      
      - name: Test model_api package
        run: |
          pytest python-packages/model_api/tests
  
      - name: Build the docker image of the model_api package
        run: |
          echo "TODO"
  
      - name: Publish the docker image of the model_api package to DockerHub
        run: |
          echo "TODO (Part of the CD pipeline)"

  GreenLightUi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Update pip
        run: |
          python -m pip install --upgrade pip
        
      - name: Install green_light_ui package 
        run: |
          python -m pip install -e python-packages/model_api
      
      - name: Test green_light_ui package
        run: |
          pytest python-packages/model_api/tests
  
      - name: Build the docker image of the green_light_ui package
        run: |
          echo "TODO"
  
      - name: Publish the docker image of the green_light_ui package to DockerHub
        run: |
          echo "TODO (Part of the CD pipeline)"
          
  # DockerCompose:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4
  
  #     - name: Create `Postgres` directory for the `database` microservice
  #       run: mkdir ~/Volumes/db

  #     - name: Create `PgAdmin` directory for the `DB admin` microservice
  #       run: mkdir ~/Volumes/db_admin

  #     - name: Create `data` directory for ingesting the data in the DB
  #       run: mkdir ~/Volumes/data
  
  #     - name: Build Docker images and run Docker containers in background
  #       run: docker-compose up --detach
  
  #     - name: Run unit tests
  #       run: docker exec testing pytest -v /home/shield/testing/testing_script.py


