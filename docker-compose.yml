services:
  import_data:
    image: shield_import_data
    container_name: import_data
    ports:
      - "8011:8001"
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume
  
  make_dataset:
    depends_on:
      import_data:
        condition: service_completed_successfully
    image: shield_make_dataset
    container_name: make_dataset
    ports:
      - "8012:8002"
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume
  
  create_users_db:
    image: shield_create_users_db_image
    depends_on:
      make_dataset:
        condition: service_completed_successfully
    container_name: create_users
    ports:
      - "8013:8003"
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume
  
  train_model:
    image: shield_train_model_image
    depends_on:
      create_users_db:
        condition: service_completed_successfully
    container_name: train_model
    ports:
      - "8014:8004"
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume


  api_shield:
    depends_on:
      train_model:
        condition: service_completed_successfully
    image: shield_api_image
    container_name: api
    ports:
      - "8000:8000" # pour ne pas avoir à modifier nos commandes curl
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://127.0.0.1:8000"]
      #interval: 1ms
      #timeout: 10s
      #retries: 3
      #start_period: 20s
      #start_interval: 5s
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume
  
  test_api_shield:
    depends_on:
      train_model:
        condition: service_completed_successfully
    image: shield_test_api_image
    container_name: test_api
    ports:
      - "8006:8006" # pour ne pas avoir à modifier nos commandes curl
    volumes:
      - type: volume
        source: app_volume
        target: /home/volume

volumes:
  app_volume:
